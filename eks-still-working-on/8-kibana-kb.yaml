apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '19'
  creationTimestamp: '2023-11-20T23:47:18Z'
  generation: 19
  labels:
    common.k8s.elastic.co/template-hash: '796149776'
    common.k8s.elastic.co/type: kibana
    kibana.k8s.elastic.co/name: kibana
  managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:common.k8s.elastic.co/template-hash: {}
            f:common.k8s.elastic.co/type: {}
            f:kibana.k8s.elastic.co/name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d0498303-2a17-441c-ac50-272f776f5061"}: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:co.elastic.logs/module: {}
                f:kibana.k8s.elastic.co/config-hash: {}
              f:labels:
                .: {}
                f:common.k8s.elastic.co/type: {}
                f:kibana.k8s.elastic.co/name: {}
                f:kibana.k8s.elastic.co/version: {}
            f:spec:
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"kibana"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":5601,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/mnt/elastic-internal/http-certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/mnt/elastic-internal/kibana-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/usr/share/kibana/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/usr/share/kibana/config/elasticsearch-certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/usr/share/kibana/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:imagePullSecrets:
                .: {}
                k:{"name":"regcred-gcp"}: {}
              f:initContainers:
                .: {}
                k:{"name":"elastic-internal-init-config"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"NODE_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_IP"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/mnt/elastic-internal/http-certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/mnt/elastic-internal/kibana-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/mnt/elastic-internal/kibana-config-local"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/usr/share/kibana/config/elasticsearch-certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/usr/share/kibana/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"elastic-internal-http-certificates"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"elastic-internal-kibana-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"elastic-internal-kibana-config-local"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
                k:{"name":"elasticsearch-certs"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"kibana-data"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: elastic-operator
      operation: Update
      time: '2024-11-26T18:00:53Z'
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: '2025-02-05T20:41:19Z'
  name: kibana-kb
  namespace: opr-develop
  ownerReferences:
    - apiVersion: kibana.k8s.elastic.co/v1
      blockOwnerDeletion: true
      controller: true
      kind: Kibana
      name: kibana
      uid: d0498303-2a17-441c-ac50-272f776f5061
  resourceVersion: '406676925'
  uid: 35f15d19-7a61-436c-a154-d7933a72b226
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      common.k8s.elastic.co/type: kibana
      kibana.k8s.elastic.co/name: kibana
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        co.elastic.logs/module: kibana
        kibana.k8s.elastic.co/config-hash: '305774532'
      creationTimestamp: null
      labels:
        common.k8s.elastic.co/type: kibana
        kibana.k8s.elastic.co/name: kibana
        kibana.k8s.elastic.co/version: 8.7.0
    spec:
      automountServiceAccountToken: false
      containers:
        - image: >-
            us-east1-docker.pkg.dev/unity-solutions-tyndall-prd/docker/ironbank/elastic/kibana/kibana:8.7.0
          imagePullPolicy: IfNotPresent
          name: kibana
          ports:
            - containerPort: 5601
              name: https
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /login
              port: 5601
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 1Gi
            requests:
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /mnt/elastic-internal/http-certs
              name: elastic-internal-http-certificates
              readOnly: true
            - mountPath: /mnt/elastic-internal/kibana-config
              name: elastic-internal-kibana-config
              readOnly: true
            - mountPath: /usr/share/kibana/config
              name: elastic-internal-kibana-config-local
            - mountPath: /usr/share/kibana/config/elasticsearch-certs
              name: elasticsearch-certs
              readOnly: true
            - mountPath: /usr/share/kibana/data
              name: kibana-data
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: regcred-gcp
      initContainers:
        - command:
            - /usr/bin/env
            - bash
            - '-c'
            - "#!/usr/bin/env bash\nset -eux\n\ninit_config_initialized_flag=/mnt/elastic-internal/kibana-config-local/elastic-internal-init-config.ok\n\nif [[ -f \"${init_config_initialized_flag}\" ]]; then\n    echo \"Kibana configuration already initialized.\"\n\texit 0\nfi\n\necho \"Setup Kibana configuration\"\n\nln -sf /mnt/elastic-internal/kibana-config/* /mnt/elastic-internal/kibana-config-local/\n\ntouch \"${init_config_initialized_flag}\"\necho \"Kibana configuration successfully prepared.\"\n"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          image: >-
            us-east1-docker.pkg.dev/unity-solutions-tyndall-prd/docker/ironbank/elastic/kibana/kibana:8.7.0
          imagePullPolicy: IfNotPresent
          name: elastic-internal-init-config
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /mnt/elastic-internal/http-certs
              name: elastic-internal-http-certificates
              readOnly: true
            - mountPath: /mnt/elastic-internal/kibana-config
              name: elastic-internal-kibana-config
              readOnly: true
            - mountPath: /mnt/elastic-internal/kibana-config-local
              name: elastic-internal-kibana-config-local
            - mountPath: /usr/share/kibana/config/elasticsearch-certs
              name: elasticsearch-certs
              readOnly: true
            - mountPath: /usr/share/kibana/data
              name: kibana-data
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: elastic-internal-http-certificates
          secret:
            defaultMode: 420
            optional: false
            secretName: kibana-kb-http-certs-internal
        - name: elastic-internal-kibana-config
          secret:
            defaultMode: 420
            optional: false
            secretName: kibana-kb-config
        - emptyDir: {}
          name: elastic-internal-kibana-config-local
        - name: elasticsearch-certs
          secret:
            defaultMode: 420
            optional: false
            secretName: kibana-kb-es-ca
        - emptyDir: {}
          name: kibana-data
status:
  availableReplicas: 1
  conditions:
    - lastTransitionTime: '2023-11-21T21:27:18Z'
      lastUpdateTime: '2024-11-26T18:01:33Z'
      message: ReplicaSet "kibana-kb-77bb49654c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: 'True'
      type: Progressing
    - lastTransitionTime: '2025-02-05T20:41:19Z'
      lastUpdateTime: '2025-02-05T20:41:19Z'
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: 'True'
      type: Available
  observedGeneration: 19
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
