##  grok
input {
  udp {
    port => 514
    type => "syslog"
  }
  tcp {
    port => 514
    type => "syslog"
  }
}

filter {
  if "awx" in [message] {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} %{DATA:program}: %{GREEDYDATA:log_message}" }
    }
    mutate {
      add_tag => [ "ansible_tower", "awx_log" ]
    }
  } else if "TASK" in [message] {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} %{DATA:program}: TASK \[(?<task_name>[^\]]+)\] %{GREEDYDATA:log_message}" }
    }
    mutate {
      add_tag => [ "ansible_task" ]
    }
  } else {
    mutate {
      add_tag => [ "general_syslog" ]
    }
  }

  date {
    match => [ "timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    target => "@timestamp"
  }
}

output {
  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "ansible-tower-logs-%{+YYYY.MM.dd}"
  }
}

## csv
input {
  tcp {
    port => 5048
    type => "syslog"
    mode => server
  }
}

filter {
  if [changes][job_type] in [message] {
    csv {
      seperator => ","
      columns => ["@timestamp", "message", "host", "level", "logger_name", "stack_info"]
    }

  } else if "stdout" in [message] {
    csv {
      seperator => ","
      columns => ["@timestamp", "message", "host", "level", "logger_name", "stack_info", "guid", "event", "playbook", "playbook_uuid", "changed", "dark", "failured", "ignored", "ok", "processed", "rescued", "skipped", "artifact_data", "uuid", "play", "role", "task", "counter", "stdout", "verbosity", "start_line", "end_line", "created", "modified", "job", "host_name", "parent_uuid", "job_created", "event_display", "cluster_host_id", "tower_uuid"]
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "ansible-tower-logs-%{+YYYY.MM.dd}"
  }
}
